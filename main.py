import logging
import os
import telebot

from telebot import types
from flask import Flask, request

# –µ—Å–ª–∏ –≤ –æ–∫—É—Ä–∂–µ–Ω–∏–∏ –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è HEROKU, –∑–Ω–∞—á–∏—Ç –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
if 'HEROKU' in list(os.environ.keys()):
    TOKEN = str(os.environ.get('TOKEN'))
# –∏–Ω–∞—á–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –µ–≥–æ –∏–∑ —Å–∫—Ä—ã—Ç–æ–≥–æ –≤ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
else:
    import token_key
    TOKEN = token_key.token

bot = telebot.TeleBot(TOKEN)
server = Flask(__name__)

greeting_text = '*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –º–æ–¥–Ω–∏–∫!*üòéü§ôüèº\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ–π —Ä–∞—Ä–Ω—ã–π –∞–π—Ç–µ–º –Ω—É–∂–Ω–æ –±—ã—Ç—å ' \
                '–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª!\n\n‚úîÔ∏è @BrandPlace ‚úîÔ∏è '


def get_greeting_markup():
    markup = types.ReplyKeyboardMarkup()
    markup.row('üí∞–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—åüí∞')
    markup.row('üî•–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏üî•')
    markup.row('‚ö°–ü—Ä–∞–≤–∏–ª–∞‚ö°Ô∏è', 'üåÑ–ú–æ–¥–Ω—ã–µ –æ–±–æ–∏üåÑ')
    markup.row('üõ†–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∞–º–∏üõ†', 'üíª–û —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µüíª')
    markup.resize_keyboard = True
    return markup


def get_types_publishing():
    markup = types.ReplyKeyboardMarkup()
    markup.row('üí´–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—èüí´ (free)')
    markup.row('üíµ–ó–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–π –ø–æ—Å—Çüíµ (300 —Ä—É–±.)')
    markup.row('üí∂–ü–æ—Å—Ç –≤–Ω–µ –æ—á–µ—Ä–µ–¥–∏üí∂ (150 —Ä—É–±.)')
    markup.row('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüì≤')
    markup.resize_keyboard = True
    return markup


@bot.message_handler(func=lambda message: message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüì≤')
@bot.message_handler(commands=['start'])
def greeting(message: types.Message):
    bot.send_message(message.from_user.id, greeting_text, reply_markup=get_greeting_markup())


@bot.message_handler(func=lambda message: message.text == 'üî•–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏üî•')
def manual(message: types.Message):
    markup = types.ReplyKeyboardMarkup()
    markup.row('1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º nickname')
    markup.row('2Ô∏è‚É£ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞')
    markup.row('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüì≤')
    markup.resize_keyboard = True
    bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫üîò',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == 'üí∞–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—åüí∞')
def types_of_publish(message: types.Message):
    required = 'üî¥*–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û* –Ω–∞–¥–æ —Å–æ–∑–¥–∞—Ç—å –Ω–∏–∫–Ω–µ–π–º. –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å —Ç–æ–±–æ–π *—Å–º–æ–≥* —Å–≤—è–∑–∞—Ç—å—Å—è ' \
               '–ø–æ–∫—É–ø–∞—Ç–µ–ª—åüî¥\n\nüìù–í —Ç–µ–ª–µ–≥—Ä–∞–º–µ –∑–∞—Ö–æ–¥–∏–º –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏(Settings) ‚ñ∂Ô∏è –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(Username)üìù '
    info = '–°–æ–∑–¥–∞–ª? –ö—Ä–∞—Å–∞–≤—á–∏–∫!\n–ö–∞–∫–∏–º —Å–ø–æ—Å–æ–±–æ–º –±—É–¥–µ–º –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–≤–æ–π –∞–π—Ç–µ–º‚ùì'
    bot.send_message(message.from_user.id, required, parse_mode='Markdown')
    bot.send_message(message.from_user.id, info, reply_markup=get_types_publishing())


@bot.message_handler(func=lambda message: message.text == '1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º nickname')
def manual_create_nickname(message: types.Message):
    bot.send_message(message.from_user.id, 'http://telegra.ph/1-Sozdayom-nickname-03-06')


@bot.message_handler(func=lambda message: message.text == '2Ô∏è‚É£ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞')
def manual_create_post(message: types.Message):
    # TODO: –Ω–∞–ø–∏—Å–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
    pass


@bot.message_handler(func=lambda message: message.text == '‚ö°–ü—Ä–∞–≤–∏–ª–∞‚ö°Ô∏è')
def rules(message: types.Message):
    rule = '*–î–æ—Ä–æ–≥–∏–µ* –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ –∏ –≥–æ—Å—Ç–∏ –∫–∞–Ω–∞–ª–∞, —Å–ø–µ—à–∏–º –¥–æ–Ω–µ—Å—Ç–∏ –¥–æ –≤–∞—Å –ø—Ä–∞–≤–∏–ª–∞ –Ω–∞—à–µ–π —Ç–æ—Ä–≥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–∏.\n–í —Ü–µ–ª—è—Ö ' \
           '—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∫–∞–∂–¥—ã–π –ø–æ—Å—Ç –±—É–¥–µ—Ç –≤—ã—Ö–æ–¥–∏—Ç—å —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤ 1 —á–∞—Å, –≤ –ø–æ—Ä—è–¥–∫–µ –æ—á–µ—Ä–µ–¥–∏. ' \
           '*–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç —Å –≤–∞—à–∏–º –∞–π—Ç–µ–º–æ–º*, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ –∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É ' \
           '\n¬´üí∞–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—åüí∞¬ª\n\n‚ùå–ó–∞ –ø–æ–ø—ã—Ç–∫—É –ø—Ä–æ–¥–∞–∂–∏/–ø—Ä–æ–¥–∞–∂—É –Ω–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ - –≤—ã–¥–∞—ë—Ç—Å—è *–±–∞–Ω*.‚ùå '
    bot.send_message(message.from_user.id, rule, parse_mode='Markdown')


@bot.message_handler(func=lambda message: message.text == 'üíª–û —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µüíª')
def about_developer(message: types.Message):
    about_me = 'German Nikolishin\n\nPython and .NET developerüë®‚Äçüíª\nTelegramüëâ @german_nikolishin\nGitHubüëâ ' \
               'https://github.com/SkymanOne\nVKüëâ https://vk.com/german_it\nInstüëâ ' \
               'https://www.instagram.com/german.nikolishin/\nTelegram Channelüëâ https://t.me/VneUrokaDev '
    bot.send_message(message.from_user.id, about_me)


@bot.message_handler(func=lambda message: message.text == 'üõ†–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∞–º–∏üõ†')
def connect_to_admins(message: types.Message):
    info = '‚ùì–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, —Ç–æ –∏—Ö –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –æ–¥–Ω–æ–º—É –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∫–∞–Ω–∞–ª–∞‚ùì\n\nüì≤ @ogan3s\n\nüì≤ ' \
           '@code1n '
    bot.send_message(message.from_user.id, info)

# –µ—Å–ª–∏ –≤ –æ–∫—É—Ä–∂–µ–Ω–∏–∏ –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è HEROKU, –∑–Ω–∞—á–∏—Ç –ø–æ–¥–Ω–∏–º–∞–µ–º —Å–µ—Ä–≤–µ—Ä
# –∏–Ω–∞—á–µ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å–ª—É—à–∫—É
if 'HEROKU' in list(os.environ.keys()):
    @server.route('/bot', methods=['POST'])
    def get_message():
        bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
        return "!", 200


    @server.route('/')
    def webhook():
        bot.remove_webhook()
        bot.set_webhook(url='https://brand-bot.herokuapp.com/' + TOKEN)
        return '!', 200


    if __name__ == '__main__':
        server.run(host="0.0.0.0", port=int(os.environ.get('PORT', 80)))
else:
    bot.remove_webhook()
    bot.polling(True)
